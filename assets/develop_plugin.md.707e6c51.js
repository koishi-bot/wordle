import{_ as o,C as p,o as e,c as t,H as c,w as a,Q as n,k as s}from"./chunks/framework.4cec9922.js";const _=JSON.parse('{"title":"开发插件","description":"","frontmatter":{},"headers":[],"relativePath":"develop/plugin.md","filePath":"develop/plugin.md"}'),r={name:"develop/plugin.md"},i=n('<h1 id="开发插件" tabindex="-1">开发插件 <a class="header-anchor" href="#开发插件" aria-label="Permalink to &quot;开发插件&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>由于 Wordle 插件及其核心 <code>@koishijs/wordle</code> 仍处于早期开发阶段，下述的内容可能会随着项目的进展而发生变化。</p></div><h2 id="创建新插件" tabindex="-1">创建新插件 <a class="header-anchor" href="#创建新插件" aria-label="Permalink to &quot;创建新插件&quot;">​</a></h2><p>首先应当按照 <a href="https://koishi.chat/zh-CN/guide/develop/workspace.html" target="_blank" rel="noreferrer">Koishi 工作区开发</a> 创建一个新的插件项目，然后在项目目录下安装 <code>@koishijs/wordle</code> 作为直接依赖：</p>',4),y=s("div",{class:"language-npm vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"npm"),s("pre",{class:"shiki one-dark-pro vp-code-dark"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#abb2bf"}},"npm install @koishijs/wordle")])])]),s("pre",{class:"shiki github-light vp-code-light"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#24292e"}},"npm install @koishijs/wordle")])])])],-1),B=s("div",{class:"language-yarn vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"yarn"),s("pre",{class:"shiki one-dark-pro vp-code-dark"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#abb2bf"}},"yarn add @koishijs/wordle")])])]),s("pre",{class:"shiki github-light vp-code-light"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#24292e"}},"yarn add @koishijs/wordle")])])])],-1),d=n(`<p>进入 <code>src/index.ts</code>，如果你使用 Koishi 的工具链，它会为你写入了一些基本的代码。由于 Wordle 插件的特殊性，我们此处不使用这些代码，而是采用 <code>@koishijs/wordle</code> 导出的 <code>defineVariation</code>：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">defineVariation</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;@koishijs/wordle&#39;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">Schema</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;koishi&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">interface</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Config</span><span style="color:#ABB2BF;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">default</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">defineVariation</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">Config</span><span style="color:#ABB2BF;">&gt;({</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;koishi-plugin-wordle&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 插件名称</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">command</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;wordle&#39;</span><span style="color:#ABB2BF;">,            </span><span style="color:#7F848E;font-style:italic;">// 插件指令</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">Config</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Schema</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">intersect</span><span style="color:#ABB2BF;">([]) </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Schema</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">Config</span><span style="color:#ABB2BF;">&gt;, </span><span style="color:#7F848E;font-style:italic;">// 插件配置</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">locales</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&#39;zh-CN&#39;</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;./locales/zh-CN&#39;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">validWords</span><span style="color:#ABB2BF;">: [], </span><span style="color:#7F848E;font-style:italic;">// 合法单词列表</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#61AFEF;">init</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">command</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">ctx</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">// 初始化操作，如注册指令的选项等。</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">async</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">getCurrentWord</span><span style="color:#ABB2BF;">({ </span><span style="color:#E06C75;font-style:italic;">options</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">session</span><span style="color:#ABB2BF;"> }, { </span><span style="color:#E06C75;font-style:italic;">ctx</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">config</span><span style="color:#ABB2BF;"> }) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">// 获取当天的单词</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { defineVariation } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@koishijs/wordle&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { Schema } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;koishi&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Config</span><span style="color:#24292E;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">defineVariation</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">Config</span><span style="color:#24292E;">&gt;({</span></span>
<span class="line"><span style="color:#24292E;">  name: </span><span style="color:#032F62;">&#39;koishi-plugin-wordle&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 插件名称</span></span>
<span class="line"><span style="color:#24292E;">  command: </span><span style="color:#032F62;">&#39;wordle&#39;</span><span style="color:#24292E;">,            </span><span style="color:#6A737D;">// 插件指令</span></span>
<span class="line"><span style="color:#24292E;">  Config: Schema.</span><span style="color:#6F42C1;">intersect</span><span style="color:#24292E;">([]) </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Schema</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">Config</span><span style="color:#24292E;">&gt;, </span><span style="color:#6A737D;">// 插件配置</span></span>
<span class="line"><span style="color:#24292E;">  locales: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;zh-CN&#39;</span><span style="color:#24292E;">: </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;./locales/zh-CN&#39;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  validWords: [], </span><span style="color:#6A737D;">// 合法单词列表</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">init</span><span style="color:#24292E;">(</span><span style="color:#E36209;">command</span><span style="color:#24292E;">, </span><span style="color:#E36209;">ctx</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 初始化操作，如注册指令的选项等。</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getCurrentWord</span><span style="color:#24292E;">({ </span><span style="color:#E36209;">options</span><span style="color:#24292E;">, </span><span style="color:#E36209;">session</span><span style="color:#24292E;"> }, { </span><span style="color:#E36209;">ctx</span><span style="color:#24292E;">, </span><span style="color:#E36209;">config</span><span style="color:#24292E;"> }) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 获取当天的单词</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h2 id="关于插件的命名" tabindex="-1">关于插件的命名 <a class="header-anchor" href="#关于插件的命名" aria-label="Permalink to &quot;关于插件的命名&quot;">​</a></h2><p>插件的命名应当遵循 <code>koishi-plugin-xxx</code> 的格式，其中 <code>xxx</code> 为插件的名称。例如，<code>koishi-plugin-wordle</code> 为 Wordle 插件的名称。尽管插件通过 <code>@koishijs/wordle</code> 定义，但我们并不需要在插件前缀中包含 <code>wordle</code>，而应当根据你实现的游戏名称或者其规则来命名：</p><p>如 New York Times 版权所有的 <code>wordle</code> 游戏被认为是所有 wordle 类游戏的鼻祖，因此实现了该游戏规则的插件应当命名为 <code>koishi-plugin-wordle</code>。基于此规则，实现了<a href="https://github.com/yf-dev/mahjong-hand-guessing-game" target="_blank" rel="noreferrer">麻将立直牌型</a>的插件应当命名为 <code>koishi-plugin-mahjong-hand</code>，实现了<a href="https://github.com/antfu/handle" target="_blank" rel="noreferrer">汉字成语</a>的插件按照其名称命名为 <code>koishi-plugin-handle</code>。</p>`,5);function h(F,E,A,C,g,f){const l=p("tab-select");return e(),t("div",null,[i,c(l,{class:"code"},{"tab-npm":a(()=>[y]),"tab-yarn":a(()=>[B]),_:1}),d])}const u=o(r,[["render",h]]);export{_ as __pageData,u as default};
